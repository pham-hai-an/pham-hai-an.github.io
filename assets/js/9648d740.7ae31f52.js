"use strict";(self.webpackChunkiframe_doc=self.webpackChunkiframe_doc||[]).push([[234],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(r),h=o,f=p["".concat(s,".").concat(h)]||p[h]||u[h]||i;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5515:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={},s="Listeners",d={unversionedId:"sdk/android/shortVideoView/listeners",id:"sdk/android/shortVideoView/listeners",title:"Listeners",description:"Error listener",source:"@site/docs/sdk/android/shortVideoView/listeners.mdx",sourceDirName:"sdk/android/shortVideoView",slug:"/sdk/android/shortVideoView/listeners",permalink:"/sdk/android/shortVideoView/listeners",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"Play and pause",permalink:"/sdk/android/shortVideoView/play-and-pause"}},c={},u=[{value:"Error listener",id:"error-listener",level:2},{value:"Video item click listener",id:"video-item-click-listener",level:4},{value:"Detail player action listener",id:"detail-player-action-listener",level:2}],p={toc:u};function h(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"listeners"},"Listeners"),(0,i.kt)("h2",{id:"error-listener"},"Error listener"),(0,i.kt)("p",null,"When an error happens, the ShortVideo module triggers an error callback with a code and a message. To listen to the error, set a BlsShortVideoErrorListener to\nthe ShortVideoView"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"shortVideoView.setErrorListener(object : BlsShortVideoErrorListener {\n    override fun onShortVideoError(code: Int, msg: String?) {\n    }\n})\n")),(0,i.kt)("p",null,"The error code can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"BlsShortVideoErrorCode")," and the message will describe the error"),(0,i.kt)("h4",{id:"video-item-click-listener"},"Video item click listener"),(0,i.kt)("p",null,"When user clicks on a video item, it will open the main player and trigger a callback."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"shortVideoView.setVideoItemClickedListener(object : BlsShortVideoItemClickListener {\n    override fun onShortVideoItemClicked(videoId: String) {\n    }\n\n})\n")),(0,i.kt)("p",null,"The implementation of the listener will not affect the flow, it is used mainly for analytics purpose."),(0,i.kt)("h2",{id:"detail-player-action-listener"},"Detail player action listener"),(0,i.kt)("p",null,"This listener is different to other listeners that it is bound to an singleton handler. You have to take care of the usage of this listener or a memory leak can occur. You\nshould not implement this interface as an anonymous class in the activity context. A recommended approach is to create a class and implement this interface to\navoid any strong reference to the activity or fragment."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"class MainPlayerAction : BlsShortVideoMainPlayerActionListener {\n    override fun onProductItemClicked(\n        context: Context, item: ShortVideoProductModel\n    ): Boolean {\n        context.openBrowser(item.productUrl.orEmpty())\n        return true\n    }\n\n    override fun onShareVideo(context: Context, videoId: String): Boolean {\n        context.shareText(videoId)\n        return true\n    }\n\n    override fun onSubmitPollError(context: Context, errorCode: Int) {\n    }\n\n    override fun onSubmitDefaultAnswerError(context: Context, errorCode: Int) {\n    }\n    \n    override fun onSubmitFollowupAnswerError(context: Context, errorCode: Int) {\n    }\n}\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"onProductItemClicked")," is triggered when a shop CTA button is clicked. You can return true in this API to consume the event and stop the flow. If you return\nfalse, the SDK will continue handling the event (if any)."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"onShareVideo")," is triggered when a share button is clicked (in both Carousel and Main player). You can return true in this API to consume the event and stop the\nflow. If you return false, the SDK will continue handling the event. The default handler is to open the system share dialog."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"onSubmitPollError")," is triggered when submitting a poll option is failed."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"onSubmitDefaultAnswerError")," is triggered when submitting a default answer is failed."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"onSubmitFollowupAnswerError")," is triggered when submitting a follow up answer is failed."))}h.isMDXComponent=!0}}]);