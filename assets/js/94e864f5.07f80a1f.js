"use strict";(self.webpackChunkiframe_doc=self.webpackChunkiframe_doc||[]).push([[2136],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,y=p["".concat(u,".").concat(f)]||p[f]||s[f]||i;return r?n.createElement(y,a(a({ref:t},d),{},{components:r})):n.createElement(y,a({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},98:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={},u="Grid layout",c={unversionedId:"sdk/android/shortVideoView/grid-layout",id:"sdk/android/shortVideoView/grid-layout",title:"Grid layout",description:"Grid layout displays the videos vertically.",source:"@site/docs/sdk/android/shortVideoView/grid-layout.mdx",sourceDirName:"sdk/android/shortVideoView",slug:"/sdk/android/shortVideoView/grid-layout",permalink:"/sdk/android/shortVideoView/grid-layout",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"ShortVideoView",permalink:"/sdk/android/shortVideoView/getting-started"},next:{title:"Carousel layout",permalink:"/sdk/android/shortVideoView/carousel-layout"}},d={},s=[{value:"Grid Item",id:"grid-item",level:2}],p={toc:s};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"grid-layout"},"Grid layout"),(0,i.kt)("p",null,"Grid layout displays the videos vertically."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"val cfBuilder = ViewConfig.Builder(this) // `this` is a context\n// set the video source (SingleVideoSource, PlaylistVideoSource)\ncfBuilder.videoSource(source)\nval loCf = ShortVideoGridLayout.createDefaultConfig(this)\ncfBuilder.layoutConfig(loCf)\nshortVideoView.init(cfBuilder.build())\n")),(0,i.kt)("p",null,"You can change the Grid span count (the default value is 3)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"val loCf = ShortVideoGridLayout.createDefaultConfig(this)\nloCf.numberOfColumns = 2\n")),(0,i.kt)("p",null,"The player behavior config is set as below"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"val playerCf = PlayerItemConfiguration().apply {\n    enableAutoPlay()\n    actionOnCompleted = PlayerCompleteAction.STOP\n}\ncfBuilder.playerConfig(playerCf)\n")),(0,i.kt)("h2",{id:"grid-item"},"Grid Item"),(0,i.kt)("p",null,"For Grid item, you can customize the below UI components/attrs:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Item width and height ratio: This ratio is in String format ("9:16"). It is recommended to use a portrait ratio'),(0,i.kt)("li",{parentName:"ul"},"Video title text view"),(0,i.kt)("li",{parentName:"ul"},"Play button. If you want to hide it, simply set it to null"),(0,i.kt)("li",{parentName:"ul"},"Item's corner radius"),(0,i.kt)("li",{parentName:"ul"},"Video thumbnail scale mode")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'val gridLoCf = ShortVideoGridLayout.createDefaultConfig(this)\ngridLoCf.ratio = "9:16"\ngridLoCf.itemConfiguration?.let { cf ->\n    cf.title = TitleConfiguration().apply {\n        this.color = ContextCompat.getColor(context, R.color.bls_sv_video_item_title_color)\n        this.backgroundRes = R.drawable.bls_sv_bg_carousel_video_item_title\n        this.textSize =\n            context.resources.getDimension(R.dimen.bls_sv_video_item_title_size)\n        this.font = Typeface.DEFAULT\n        this.gravity = Gravity.START or Gravity.CENTER_VERTICAL\n    }\n    cf.playButton = ButtonViewItemConfiguration().apply {\n        this.onStateIconRes = R.drawable.ic_play\n    }\n    cf.cornerRadius = 10F\n    cf.imageScaleMode = ImageView.ScaleType.CENTER\n}\n')))}f.isMDXComponent=!0}}]);