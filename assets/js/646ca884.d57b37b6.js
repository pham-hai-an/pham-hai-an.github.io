"use strict";(self.webpackChunkiframe_doc=self.webpackChunkiframe_doc||[]).push([[7422],{3905:function(e,t,i){i.d(t,{Zo:function(){return p},kt:function(){return m}});var n=i(7294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var u=n.createContext({}),d=function(e){var t=n.useContext(u),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},p=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(i),m=o,h=c["".concat(u,".").concat(m)]||c[m]||s[m]||a;return i?n.createElement(h,r(r({ref:t},p),{},{components:i})):n.createElement(h,r({ref:t},p))}));function m(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=i.length,r=new Array(a);r[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var d=2;d<a;d++)r[d]=i[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},9784:function(e,t,i){i.r(t),i.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s}});var n=i(7462),o=i(3366),a=(i(7294),i(3905)),r=["components"],l={},u=void 0,d={unversionedId:"sdk/ios",id:"sdk/ios",title:"ios",description:"LORA Short Video SDK is a component of the LORA SDK that can be utilized alongside other modules within the LORA SDK or independently. To function properly, the LORA Short Video SDK necessitates the LoraCore module",source:"@site/docs/sdk/ios.md",sourceDirName:"sdk",slug:"/sdk/ios",permalink:"/sdk/ios",draft:!1,tags:[],version:"current",frontMatter:{}},p={},s=[{value:"CocoaPods",id:"cocoapods",level:2},{value:"Carthage",id:"carthage",level:2},{value:"Step 1: Add frameworks",id:"step-1-add-frameworks",level:3},{value:"Step 2: Update <code>Cartfile</code>",id:"step-2-update-cartfile",level:3},{value:"Grid Layout",id:"grid-layout",level:2},{value:"Grid Item",id:"grid-item",level:3},{value:"Carousel Layout",id:"carousel-layout",level:2},{value:"Carousel Item",id:"carousel-item",level:3},{value:"Storyblock Layout",id:"storyblock-layout",level:2},{value:"Storyblock Item",id:"storyblock-item",level:3},{value:"Detail Player",id:"detail-player",level:2},{value:"Detail Player Item",id:"detail-player-item",level:3},{value:"Product Item",id:"product-item",level:3},{value:"Q&amp;A Item",id:"qa-item",level:3},{value:"Poll Item",id:"poll-item",level:3},{value:"PIP",id:"pip",level:3},{value:"Player behaviors",id:"player-behaviors",level:2},{value:"ShortVideoSource",id:"shortvideosource",level:2},{value:"Playlist",id:"playlist",level:3},{value:"Single",id:"single",level:3},{value:"Play &amp; Pause",id:"play--pause",level:2},{value:"Delegates",id:"delegates",level:2}],c={toc:s};function m(e){var t=e.components,i=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"LORA Short Video SDK"))," is a component of the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA SDK")," that can be utilized alongside other modules within the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA SDK")," or independently. To function properly, the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," necessitates the ",(0,a.kt)("inlineCode",{parentName:"p"},"LoraCore")," module"),(0,a.kt)("h1",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Video Grid View"),(0,a.kt)("li",{parentName:"ul"},"Video Carousel View"),(0,a.kt)("li",{parentName:"ul"},"Video Storyblock View"),(0,a.kt)("li",{parentName:"ul"},"Video Detail Player"),(0,a.kt)("li",{parentName:"ul"},"Playlist"),(0,a.kt)("li",{parentName:"ul"},"PIP")),(0,a.kt)("h1",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"iOS 11.0+"),(0,a.kt)("li",{parentName:"ul"},"Xcode 13.0 and above")),(0,a.kt)("h1",{id:"integration"},"Integration"),(0,a.kt)("p",null,"Below are the steps to independently add the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," to your project."),(0,a.kt)("h2",{id:"cocoapods"},"CocoaPods"),(0,a.kt)("p",null,"This is the easiest method to integrate the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," into your app. You can utilize ",(0,a.kt)("a",{parentName:"p",href:"http://cocoapods.org/"},"CocoaPods")," to install the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," by adding it to your ",(0,a.kt)("inlineCode",{parentName:"p"},"Podfile"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"platform :ios, '11.0'\nuse_frameworks!\npod 'LoraCore', :path => '../framework/LoraCore' # path to podspec file\npod 'LoraShortVideo', :path => '../framework/LoraShortVideo' # path to podspec file\n")),(0,a.kt)("h2",{id:"carthage"},"Carthage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," is distributed via ",(0,a.kt)("inlineCode",{parentName:"p"},"xcframework")," which is recommended by Apple since WWDC 2019"),(0,a.kt)("h3",{id:"step-1-add-frameworks"},"Step 1: Add frameworks"),(0,a.kt)("p",null,"Drag ",(0,a.kt)("inlineCode",{parentName:"p"},"LoraCore.xcframework")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"LoraShortVideo.xcframework")," into ",(0,a.kt)("strong",{parentName:"p"},"Frameworks, Libraries, and Embedded Contents")," and Select ",(0,a.kt)("strong",{parentName:"p"},"Embedded & Sign"),"  "),(0,a.kt)("h3",{id:"step-2-update-cartfile"},"Step 2: Update ",(0,a.kt)("inlineCode",{parentName:"h3"},"Cartfile")),(0,a.kt)("p",null,"You may encounter the build error or get crash: ",(0,a.kt)("inlineCode",{parentName:"p"},"dyld: Symbol not found")," on Xcode 12 and above when using ",(0,a.kt)("inlineCode",{parentName:"p"},"xcframework")," . Here is a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Carthage/Carthage/blob/master/Documentation/Xcode12Workaround.md"},"workaround")," to fix this issue"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create file ",(0,a.kt)("inlineCode",{parentName:"li"},"carthage.sh")," in your root project folder with this content")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"# carthage.sh\n# Usage example: ./carthage.sh build --platform iOS\n\nset -euo pipefail\n \nxcconfig=$(mktemp /tmp/static.xcconfig.XXXXXX)\ntrap 'rm -f \"$xcconfig\"' INT TERM HUP EXIT\n \n# For Xcode 12 make sure EXCLUDED_ARCHS is set to arm architectures otherwise\n# the build will fail on lipo due to duplicate architectures.\n \nCURRENT_XCODE_VERSION=\"$(xcodebuild -version | grep \"Xcode\" | cut -d' ' -f2 | cut -d'.' -f1)00\"\nCURRENT_XCODE_BUILD=$(xcodebuild -version | grep \"Build version\" | cut -d' ' -f3)\n\necho \"EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_${CURRENT_XCODE_VERSION}__BUILD_${CURRENT_XCODE_BUILD} = arm64 arm64e armv7 armv7s armv6 armv8\" >> $xcconfig\n \necho 'EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_'${CURRENT_XCODE_VERSION}' = $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_$(XCODE_VERSION_MAJOR)__BUILD_$(XCODE_PRODUCT_BUILD_VERSION))' >> $xcconfig\necho 'EXCLUDED_ARCHS = $(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT)__XCODE_$(XCODE_VERSION_MAJOR))' >> $xcconfig\n\n# build all libraries for distribution\n# https://github.com/Carthage/Carthage/issues/2845\necho 'BUILD_LIBRARY_FOR_DISTRIBUTION=YES' >> $xcconfig\n\nexport XCODE_XCCONFIG_FILE=\"$xcconfig\"\ncarthage \"$@\"\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add run permission to this file by ",(0,a.kt)("inlineCode",{parentName:"li"},"chmod +x carthage.sh")),(0,a.kt)("li",{parentName:"ul"},"Instead of running ",(0,a.kt)("inlineCode",{parentName:"li"},"carthage")," command, we'll change to run ",(0,a.kt)("inlineCode",{parentName:"li"},"carthage.sh"),". Eg: ",(0,a.kt)("inlineCode",{parentName:"li"},"sh carthage.sh update --platform iOS --no-use-binaries --use-xcframeworks"))),(0,a.kt)("h1",{id:"initialize-sdk"},"Initialize SDK"),(0,a.kt)("p",null,"Before utilizing its features, it's essential to initialize the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA SDK"),". You can initiate the SDK using the provided code along with the ",(0,a.kt)("inlineCode",{parentName:"p"},"licenseKey"),". To obtain this ",(0,a.kt)("inlineCode",{parentName:"p"},"licenseKey"),", please reach out to our support team."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"import LoraCore\n\n@main\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        // Initialize LORA SDK\n        LoraSDK.shared.initWith(licenseKey)\n        .\n        .\n        .\n    return true\n    }\n}\n")),(0,a.kt)("h1",{id:"shortvideoview"},"ShortVideoView"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ShortVideoView")," serves as an entry point within the UI and is designed to present a variety of video view types: vertical grid, horizontal grid, and carousel. When a user clicks on a video item, it triggers the opening of the primary player, which then plays the selected video. Incorporating a ",(0,a.kt)("inlineCode",{parentName:"p"},"ShortVideoView")," is as straightforward as adding any other view, and it can be accomplished through either Storyboard or code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"let shortVideoView = ShortVideoView(frame: self.view.bounds)\n")),(0,a.kt)("p",null,"Upon execution, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ShortVideoView")," fetches video data from a ",(0,a.kt)("inlineCode",{parentName:"p"},"ShortVideoSource"),". This source is defined by a ",(0,a.kt)("inlineCode",{parentName:"p"},"ShortVideoConfiguration"),", which determines the layout type and offers customization options for the UI. Additionally, it manages certain fundamental player behaviors."),(0,a.kt)("h2",{id:"grid-layout"},"Grid Layout"),(0,a.kt)("p",null,"The grid layout is designed to support a vertical scroll direction.\nYou can set it up like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"let layout = ShortVideoGridLayout.default\nlet configuration = ShortVideoConfiguration()\nconfiguration.layout = layout\n.\n.\n.\nshortVideoView.configuration = configuration\n")),(0,a.kt)("p",null,"You have the flexibility to modify the number of columns via the layout configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"layout.numberOfColumns = numberOfColums\n")),(0,a.kt)("p",null,"Various attributes can be customized with the grid layout, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Spacing between items")),(0,a.kt)("h3",{id:"grid-item"},"Grid Item"),(0,a.kt)("p",null,"For customization of individual grid items, the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," offers the following attributes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Item ratio (width/height)"),(0,a.kt)("li",{parentName:"ul"},"Corner radius"),(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Play button (set to ",(0,a.kt)("inlineCode",{parentName:"li"},"nil")," to hide it)"),(0,a.kt)("li",{parentName:"ul"},"Thumbnail scale mode")),(0,a.kt)("h2",{id:"carousel-layout"},"Carousel Layout"),(0,a.kt)("p",null,"The carousel layout is designed to support a horizontal scroll direction.\nYou can set it up like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"let layout = ShortVideoCarouselLayout.default\nlet configuration = ShortVideoConfiguration()\nconfiguration.layout = layout\n.\n.\n.\nshortVideoView.configuration = configuration\n")),(0,a.kt)("p",null,"With the carousel layout, attributes that can be customized include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Spacing between items")),(0,a.kt)("h3",{id:"carousel-item"},"Carousel Item"),(0,a.kt)("p",null,"For customization of individual carousel items, the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," provides the following attributes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Item ratio (width/height)"),(0,a.kt)("li",{parentName:"ul"},"Corner radius"),(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Play button (set to ",(0,a.kt)("inlineCode",{parentName:"li"},"nil")," to hide it)"),(0,a.kt)("li",{parentName:"ul"},"Mute/unmute button"),(0,a.kt)("li",{parentName:"ul"},"Thumbnail scale mode"),(0,a.kt)("li",{parentName:"ul"},"Video scale mode")),(0,a.kt)("h2",{id:"storyblock-layout"},"Storyblock Layout"),(0,a.kt)("p",null,"The storyblock layout is designed to support a horizontal scroll direction. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"let layout = ShortVideoStoryBlockLayout.default\nlet configuration = ShortVideoConfiguration()\nconfiguration.layout = layout\n.\n.\n.\nshortVideoView.configuration = configuration\n")),(0,a.kt)("p",null,"You have the ability to disable scrolling, update item configurations, and customize the next/previous buttons. Here are the attributes that can be customized:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Container background color"),(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Previous button (set to ",(0,a.kt)("inlineCode",{parentName:"li"},"nil")," to hide it)"),(0,a.kt)("li",{parentName:"ul"},"Next button (set to ",(0,a.kt)("inlineCode",{parentName:"li"},"nil")," to hide it)")),(0,a.kt)("h3",{id:"storyblock-item"},"Storyblock Item"),(0,a.kt)("p",null,"For customization of individual storyblock items, the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," provides the following attributes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Corner radius"),(0,a.kt)("li",{parentName:"ul"},"Title"),(0,a.kt)("li",{parentName:"ul"},"Progress"),(0,a.kt)("li",{parentName:"ul"},"Play/pause button"),(0,a.kt)("li",{parentName:"ul"},"Mute/unmute button"),(0,a.kt)("li",{parentName:"ul"},"Fullscreen button"),(0,a.kt)("li",{parentName:"ul"},"Share button"),(0,a.kt)("li",{parentName:"ul"},"Thumbnail scale mode"),(0,a.kt)("li",{parentName:"ul"},"Video scale mode")),(0,a.kt)("h2",{id:"detail-player"},"Detail Player"),(0,a.kt)("p",null,"When a video item is clicked, a detailed video screen will open to play the chosen video. You can navigate between items by swipe up and down gesture. This screen supports various features including product view, Q&A, polling, video seeking, and Picture-in-Picture (PIP). The Detail Player is an internal controller, which cannot be modified, but its UI and player behavior can be configured through ",(0,a.kt)("inlineCode",{parentName:"p"},"configuration.detailConfiguration"),". If you wish to prevent this screen from appearing, set ",(0,a.kt)("inlineCode",{parentName:"p"},"configuration.detailConfiguration = nil"),". The following attributes within the ",(0,a.kt)("inlineCode",{parentName:"p"},"detailConfiguration")," can be adjusted:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Allow scroll"),(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Previous button (set to nil to hide it)"),(0,a.kt)("li",{parentName:"ul"},"Next button (set to nil to hide it)"),(0,a.kt)("li",{parentName:"ul"},"Close button (set to nil to hide it)")),(0,a.kt)("h3",{id:"detail-player-item"},"Detail Player Item"),(0,a.kt)("p",null,"For customization of individual items within the detail player, the ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," provides the following attributes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Corner radius"),(0,a.kt)("li",{parentName:"ul"},"Title"),(0,a.kt)("li",{parentName:"ul"},"Progress seekbar"),(0,a.kt)("li",{parentName:"ul"},"Play/pause button"),(0,a.kt)("li",{parentName:"ul"},"Mute/unmute button"),(0,a.kt)("li",{parentName:"ul"},"PIP button"),(0,a.kt)("li",{parentName:"ul"},"Share button"),(0,a.kt)("li",{parentName:"ul"},"Thumbnail scale mode"),(0,a.kt)("li",{parentName:"ul"},"Video scale mode")),(0,a.kt)("h3",{id:"product-item"},"Product Item"),(0,a.kt)("p",null,"A list of products can be linked to a video item and displayed in detail. Each product item can include a Shop CTA (Call to Action) button that opens the product URL in an external browser (this behavior can be overridden). The product item's UI can be customized with attributes such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Background color"),(0,a.kt)("li",{parentName:"ul"},"Corner radius"),(0,a.kt)("li",{parentName:"ul"},"Title"),(0,a.kt)("li",{parentName:"ul"},"CTA button: Text, Color, Image"),(0,a.kt)("li",{parentName:"ul"},"Thumbnail scale mode")),(0,a.kt)("h3",{id:"qa-item"},"Q&A Item"),(0,a.kt)("p",null,"A Q&A can be associated with a video item and shown in detail. Each Q&A item contains a CTA (Call to Action) button to submit an answer. The Q&A item's UI can be customized, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CTA button: Text Color, Background Color")),(0,a.kt)("h3",{id:"poll-item"},"Poll Item"),(0,a.kt)("p",null,"A Poll can be linked to a video item and displayed in detail. Each Poll item contains a CTA button to submit an answer. The Poll item's UI can be customized, such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CTA button: Text Color, Background Color")),(0,a.kt)("h3",{id:"pip"},"PIP"),(0,a.kt)("p",null,"The detail player supports playing a video in Picture-in-Picture (PIP) mode. You can disable this feature by hiding the PIP button (set it to ",(0,a.kt)("inlineCode",{parentName:"p"},"nil"),")."),(0,a.kt)("h2",{id:"player-behaviors"},"Player behaviors"),(0,a.kt)("p",null,"Player behaviors define actions when a video item changes. ",(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," supports 2 behaviors ",(0,a.kt)("inlineCode",{parentName:"p"},"autoplay")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Player complete action"),". You can configure these using the ",(0,a.kt)("inlineCode",{parentName:"p"},"configuration.player.autoPlay")," property and ",(0,a.kt)("inlineCode",{parentName:"p"},"configuration.player.playerCompleteAction")," property"),(0,a.kt)("p",null,"For ",(0,a.kt)("inlineCode",{parentName:"p"},"playerCompleteAction"),", you have 4 options:\nThere are 4 options that you can set:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Stop"),": The player will always stop the video after finishing playing it."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Loop"),": The player will always loop the current video."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PlayNextItem"),": The player will always play the next video in the list. If the current video is the last item, the player will stop playing."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PlayNextItemAndLoop"),": The player will always play the next video in the list. If the current video is the last item, the player will play the first item in the list.")),(0,a.kt)("h2",{id:"shortvideosource"},"ShortVideoSource"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," supports 2 types of video sources"),(0,a.kt)("h3",{id:"playlist"},"Playlist"),(0,a.kt)("p",null,"The playlist video source will fetch all the available videos from a specific playlist by an ID. To create a playlist source, use the below API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"ShortVideoSource.init(playlistId: String, maxItemsCount: Int? = nil)\n")),(0,a.kt)("p",null,"Setting a ",(0,a.kt)("inlineCode",{parentName:"p"},"maxVideoItemsCount")," greater than 0 will limit the number of videos to load, and set ",(0,a.kt)("inlineCode",{parentName:"p"},"nil")," to show all videos in the playlist."),(0,a.kt)("h3",{id:"single"},"Single"),(0,a.kt)("p",null,"The single video source will fetch a single video by a video id. To create a single source, use the below API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"ShortVideoSource.init(videoId: String)\n")),(0,a.kt)("h2",{id:"play--pause"},"Play & Pause"),(0,a.kt)("p",null,"User can pause and resume the video by calling the following APIs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"shortVideoView.pause()\n//\nshortVideoView.play()\n")),(0,a.kt)("h2",{id:"delegates"},"Delegates"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"LORA Short Video SDK")," provides various delegates to listen to events when tapping on an item, product CTA, or when errors occur."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public protocol BLShortVideoErrorDelegate: AnyObject {\n    /// Callback when any error occur\n    /// - Parameters:\n    ///   - view: ShortVideoView\n    ///   - error: ShortVideoError error\n    func shortVideoView(view: ShortVideoView, onError error: ShortVideoError)\n}\n\npublic protocol BLShortVideoItemDelegate: AnyObject {\n    /// Callback when short video item is clicked\n    /// - Parameters:\n    ///   - view: ShortVideoView\n    ///   - videoId: videoId\n    func shortVideoView(view: ShortVideoView, itemDidClick videoId: String)\n}\n\npublic protocol BLShortVideoShareItemDelegate: NSObject {\n    /// Callback when share button is clicked\n    /// - Parameters:\n    ///   - videoId: videoId\n    ///   - handle: if handle completion is `true`, nothing happen otherwise it'll show default system share\n    func shortVideoItemDidShare(videoId: String, handle: @escaping (Bool) -> Void)\n}\n\npublic protocol BLShortVideoProductItemCTADelegate: AnyObject {\n    /// Callback when product item call to action button is clicked\n    /// - Parameter product: product object\n    func shortVideoViewProductItemCTADidClick(product: BLShortVideoProduct)\n}\n\npublic protocol BLShortVideoSubmitPollErrorDelegate: AnyObject {\n    /// Callback when any error occur\n    /// - Parameters:\n    ///   - errorCode: Error code\n    func onSubmitPollError(errorCode: Int)\n}\n\npublic protocol BLShortVideoSubmitQnAErrorDelegate: AnyObject {\n    /// Callback when any error occur during submit default answer\n    /// - Parameters:\n    ///   - errorCode: Error code\n    func onSubmitDefaultAnswerError(errorCode: Int)\n\n    /// Callback when any error occur during submit followup answer\n    /// - Parameters:\n    ///   - errorCode: Error code\n    func onSubmitFollowupAnswerError(errorCode: Int)\n}\n")))}m.isMDXComponent=!0}}]);