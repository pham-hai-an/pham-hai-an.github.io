"use strict";(self.webpackChunkiframe_doc=self.webpackChunkiframe_doc||[]).push([[9229],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return m}});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var u=n.createContext({}),d=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(o),m=a,h=c["".concat(u,".").concat(m)]||c[m]||s[m]||r;return o?n.createElement(h,i(i({ref:t},p),{},{components:o})):n.createElement(h,i({ref:t},p))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<r;d++)i[d]=o[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},131:function(e,t,o){o.r(t),o.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s}});var n=o(7462),a=o(3366),r=(o(7294),o(3905)),i=["components"],l={displayed_sidebar:"sdkSidebar"},u="iOS Integration",d={unversionedId:"sdk/ios",id:"sdk/ios",title:"iOS Integration",description:"LoraVideoSDK is a module of LoraSDK, can be used with other modules of LoraSDK or independently.",source:"@site/docs/sdk/ios.mdx",sourceDirName:"sdk",slug:"/sdk/ios",permalink:"/sdk/ios",draft:!1,tags:[],version:"current",frontMatter:{displayed_sidebar:"sdkSidebar"},sidebar:"sdkSidebar"},p={},s=[{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Integration",id:"integration",level:2},{value:"<strong>CocoaPods</strong>",id:"cocoapods",level:3},{value:"Carthage",id:"carthage",level:3},{value:"Step 1 : Add frameworks",id:"step-1--add-frameworks",level:4},{value:"Step 2 : Update <strong>Cartfile</strong>",id:"step-2--update-cartfile",level:4},{value:"ShortVideoView",id:"shortvideoview",level:2},{value:"Grid Layout",id:"grid-layout",level:3},{value:"Grid Item",id:"grid-item",level:4},{value:"Carousel Layout",id:"carousel-layout",level:3},{value:"Carousel Item",id:"carousel-item",level:4},{value:"Storyblock Layout",id:"storyblock-layout",level:3},{value:"Storyblock Item",id:"storyblock-item",level:4},{value:"Detail Player",id:"detail-player",level:3},{value:"Detail Player Item",id:"detail-player-item",level:4},{value:"Product Item",id:"product-item",level:4},{value:"Q&amp;A Item",id:"qa-item",level:4},{value:"Poll Item",id:"poll-item",level:4},{value:"PIP",id:"pip",level:4},{value:"Player behaviors",id:"player-behaviors",level:3},{value:"Auto play",id:"auto-play",level:4},{value:"Player complete action",id:"player-complete-action",level:4},{value:"ShortVideoSource",id:"shortvideosource",level:3},{value:"Playlist",id:"playlist",level:4},{value:"Single",id:"single",level:4},{value:"Play &amp; Pause",id:"play--pause",level:3},{value:"Delegates",id:"delegates",level:3}],c={toc:s};function m(e){var t=e.components,o=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ios-integration"},"iOS Integration"),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LoraVideoSDK")," is a module of ",(0,r.kt)("strong",{parentName:"p"},"LoraSDK"),", can be used with other modules of ",(0,r.kt)("strong",{parentName:"p"},"LoraSDK")," or independently.\nShort Video requires ",(0,r.kt)("strong",{parentName:"p"},"LoraCore")," module to work normally."),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Video Grid View"),(0,r.kt)("li",{parentName:"ul"},"Video Carousel View"),(0,r.kt)("li",{parentName:"ul"},"Video Storyblock View"),(0,r.kt)("li",{parentName:"ul"},"Playlist"),(0,r.kt)("li",{parentName:"ul"},"PIP")),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"iOS 11. 0 +"),(0,r.kt)("li",{parentName:"ul"},"Xcode 13. 0 and above")),(0,r.kt)("h2",{id:"integration"},"Integration"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Below is how to add ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," independently into project."),(0,r.kt)("h3",{id:"cocoapods"},(0,r.kt)("strong",{parentName:"h3"},"CocoaPods")),(0,r.kt)("p",null,"This is simplest way to integrate ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," into your app. You can use ",(0,r.kt)("a",{parentName:"p",href:"https://cocoapods.org/"},"CocoaPods")," to install\n",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," by adding it to your ",(0,r.kt)("strong",{parentName:"p"},"Podfile")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"platform :ios, '11.0'\nuse_frameworks!\npod 'LoraCore', :path => '../framework/LoraCore' # path to podspec file\npod 'LoraShortVideo', :path => '../framework/LoraShortVideo' # path to\npodspec file\n")),(0,r.kt)("h3",{id:"carthage"},"Carthage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," is distributed via ",(0,r.kt)("strong",{parentName:"p"},"xcframework")," which is recommended by Apple since WWDC 2019"),(0,r.kt)("h4",{id:"step-1--add-frameworks"},"Step 1 : Add frameworks"),(0,r.kt)("p",null,"Drag ",(0,r.kt)("inlineCode",{parentName:"p"},"LoraCore.xcframework")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"LoraShortVideo.xcframework")," into ",(0,r.kt)("strong",{parentName:"p"},"Frameworks, Libraries, and\nEmbeded Contents"),"  and Select ",(0,r.kt)("strong",{parentName:"p"},"Embeded & Sign")),(0,r.kt)("h4",{id:"step-2--update-cartfile"},"Step 2 : Update ",(0,r.kt)("strong",{parentName:"h4"},"Cartfile")),(0,r.kt)("p",null,"You may encounter the build error or get crash: ",(0,r.kt)("inlineCode",{parentName:"p"},"dyld: Symbol not found")," on Xcode 12 and above when\nusing ",(0,r.kt)("strong",{parentName:"p"},"xcframework"),". Here is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Carthage/Carthage/blob/master/Documentation/Xcode12Workaround.md"},"workaround")," to fix this issue"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create file ",(0,r.kt)("inlineCode",{parentName:"li"},"carthage.sh")," in your root project folder with this content")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# carthage.sh\n# Usage example: ./carthage.sh build --platform iOS\n\nset -euo pipefail\n\nxcconfig=$(mktemp /tmp/static.xcconfig.XXXXXX)\ntrap 'rm -f \"$xcconfig\"' INT TERM HUP EXIT\n\n# For Xcode 12 make sure EXCLUDED_ARCHS is set to arm architectures\notherwise\n# the build will fail on lipo due to duplicate architectures.\n\nCURRENT_XCODE_VERSION=\"$(xcodebuild -version | grep \"Xcode\" | cut -d' ' -\nf2 | cut -d'.' -f1)00\"\nCURRENT_XCODE_BUILD=$(xcodebuild -version | grep \"Build version\" | cut -d'\n' -f3)\n\necho\n\"EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x\n86_64__XCODE_${CURRENT_XCODE_VERSION}__BUILD_${CURRENT_XCODE_BUILD} =\narm64 arm64e armv7 armv7s armv6 armv8\" >> $xcconfig\n\necho\n'EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x\n86_64__XCODE_'${CURRENT_XCODE_VERSION}' =\n$(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_\nx86_64__XCODE_$(XCODE_VERSION_MAJOR)__BUILD_$(XCODE_PRODUCT_BUILD_VERSION)\n)' >> $xcconfig\necho 'EXCLUDED_ARCHS = $(inherited)\n$(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__\nNATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT)__XCODE_$(XCODE_VERSION_MAJOR))'\n>> $xcconfig\n\n# build all libraries for distribution\n# https://github.com/Carthage/Carthage/issues/\necho 'BUILD_LIBRARY_FOR_DISTRIBUTION=YES' >> $xcconfig\n\nexport XCODE_XCCONFIG_FILE=\"$xcconfig\"\ncarthage \"$@\"\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add run permission to this file by ",(0,r.kt)("inlineCode",{parentName:"li"},"chmod +x carthage.sh")),(0,r.kt)("li",{parentName:"ul"},"Instead of running ",(0,r.kt)("inlineCode",{parentName:"li"},"carthage")," command, we'll change to run ",(0,r.kt)("inlineCode",{parentName:"li"},"carthage.sh"),". Eg: ",(0,r.kt)("inlineCode",{parentName:"li"},"sh carthage.sh\nupdate --platform iOS --no-use-binaries --use-xcframeworks"))),(0,r.kt)("h2",{id:"shortvideoview"},"ShortVideoView"),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ShortVideoView")," is a Ul entry point and designed to display a list of videos in many view types: vertical\ngrid, horizotal grid and carousel. When a video item is clicked, it opens the main player and play the\nselected video. Adding a ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoView")," is as simple as a normal other view, can be done via Storyboard\nor code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let shortVideoView = ShortVideoView(frame: self.view.bounds)\n")),(0,r.kt)("p",null,"When running, ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoView")," loads the video data from a ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSource")," which is defined by a\n",(0,r.kt)("strong",{parentName:"p"},"ShortVideoConfiguration"),". This config defines the layout type and provides some customization for UI.\nIt also controis some basic player behaviors."),(0,r.kt)("h3",{id:"grid-layout"},"Grid Layout"),(0,r.kt)("p",null,"Grid layout supports vertical scroll direction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let layout = ShortVideoGridLayout.default\nlet configuration = ShortVideoConfiguration()\nconfiguration.layout = layout\n.\n.\n.\nshortVideoView.configuration = configuration\n")),(0,r.kt)("p",null,"You can change the number of columns or disable scroll via the layout config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"layout.numberOfColumns = numberOfColums\n")),(0,r.kt)("p",null,"Other attributes can be customized with grid layout:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Spacing between items")),(0,r.kt)("h4",{id:"grid-item"},"Grid Item"),(0,r.kt)("p",null,"To change UI of grid item, ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," supports below attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Item ratio (width/height)"),(0,r.kt)("li",{parentName:"ul"},"Corner radius"),(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Play button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil")),(0,r.kt)("li",{parentName:"ul"},"Thumbnail scale mode")),(0,r.kt)("h3",{id:"carousel-layout"},"Carousel Layout"),(0,r.kt)("p",null,"Carousel layout supports horizontal scroll direction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let layout = ShortVideoCarouselLayout.default\nlet configuration = ShortVideoConfiguration()\nconfiguration.layout = layout\n.\n.\n.\nshortVideoView.configuration = configuration\n")),(0,r.kt)("p",null,"You can only enable/disable scroll via the layout config Other attributes can be customized with grid layout:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Spacing between items")),(0,r.kt)("h4",{id:"carousel-item"},"Carousel Item"),(0,r.kt)("p",null,"To change UI of carousel item, ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," supports below attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Item ratio (width/height)"),(0,r.kt)("li",{parentName:"ul"},"Corner radius"),(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Play button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil")),(0,r.kt)("li",{parentName:"ul"},"Mute/unmute button"),(0,r.kt)("li",{parentName:"ul"},"Thumbnail scale mode"),(0,r.kt)("li",{parentName:"ul"},"Video scale mode")),(0,r.kt)("h3",{id:"storyblock-layout"},"Storyblock Layout"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let layout = ShortVideoStoryBlockLayout.default\nlet configuration = ShortVideoConfiguration()\nconfiguration.layout = layout\n.\n.\n.\nshortVideoView.configuration = configuration\n")),(0,r.kt)("p",null,"You can disable scroll, update item configuration, next/prev button. Below is attributes you can customize:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Container background color"),(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Previous button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil")),(0,r.kt)("li",{parentName:"ul"},"Next button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil"))),(0,r.kt)("h4",{id:"storyblock-item"},"Storyblock Item"),(0,r.kt)("p",null,"To change UI of storyblock item, ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," supports below attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Corner radius"),(0,r.kt)("li",{parentName:"ul"},"Title"),(0,r.kt)("li",{parentName:"ul"},"Progress"),(0,r.kt)("li",{parentName:"ul"},"Play/pause button"),(0,r.kt)("li",{parentName:"ul"},"Mute/unmute button"),(0,r.kt)("li",{parentName:"ul"},"Fullscreen button"),(0,r.kt)("li",{parentName:"ul"},"Share button"),(0,r.kt)("li",{parentName:"ul"},"Thumbnail scale mode"),(0,r.kt)("li",{parentName:"ul"},"Video scale mode")),(0,r.kt)("h3",{id:"detail-player"},"Detail Player"),(0,r.kt)("p",null,"When video item is clicked, a detail video screen will open to play this video. This screen supports products\nview, video seeking, PIP. Detail Player is a internal controller, we don't allow to change it but you can config\nUI and player behavior of this screen via ",(0,r.kt)("inlineCode",{parentName:"p"},"configuration.detailConfiguration"),". If you don't want this\nscreen show up, set ",(0,r.kt)("inlineCode",{parentName:"p"},"configuration.detailConfiguration = nil")," Below is list of attributes can be\nedit:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allow scroll"),(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Previous button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil")),(0,r.kt)("li",{parentName:"ul"},"Next button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil")),(0,r.kt)("li",{parentName:"ul"},"Close button: if you want to hide it, simply set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"nil"))),(0,r.kt)("h4",{id:"detail-player-item"},"Detail Player Item"),(0,r.kt)("p",null,"To change UI of detail player item, ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," supports below attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Corner radius"),(0,r.kt)("li",{parentName:"ul"},"Title"),(0,r.kt)("li",{parentName:"ul"},"Progress seek bar"),(0,r.kt)("li",{parentName:"ul"},"Play/pause button"),(0,r.kt)("li",{parentName:"ul"},"Mute/unmute button"),(0,r.kt)("li",{parentName:"ul"},"PIP button"),(0,r.kt)("li",{parentName:"ul"},"Share button"),(0,r.kt)("li",{parentName:"ul"},"Thumbnail scale mode"),(0,r.kt)("li",{parentName:"ul"},"Video scale mode")),(0,r.kt)("h4",{id:"product-item"},"Product Item"),(0,r.kt)("p",null,"A list of products can be attached to a video item and it will be displayed in the detail. Each product item\nmight contain a Shop CTA (Call to action) button which opens the product URL in an external browser (you\ncan override this behavior). The product item UI can also be customized:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Background color"),(0,r.kt)("li",{parentName:"ul"},"Corner radius"),(0,r.kt)("li",{parentName:"ul"},"Title"),(0,r.kt)("li",{parentName:"ul"},"CTA button: Text, Color, Image"),(0,r.kt)("li",{parentName:"ul"},"Thumbnail scale mode")),(0,r.kt)("h4",{id:"qa-item"},"Q&A Item"),(0,r.kt)("p",null,"A Q&A can be attached to a video item and it will be displayed in the detail. Each Q&A item contain a CTA\n(Call to action) button which submit the answer. The Q&A item UI can also be customized:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CTA button: Text Color, Background Color")),(0,r.kt)("h4",{id:"poll-item"},"Poll Item"),(0,r.kt)("p",null,"A Poll can be attached to a video item and it will be displayed in the detail. Each Poll item contain a CTA (Call\nto action) button which submit the answer. The Poll item UI can also be customized:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CTA button: Text Color, Background Color")),(0,r.kt)("h4",{id:"pip"},"PIP"),(0,r.kt)("p",null,"The detail player supports play a video in PIP mode. You can disable this feature by hiding the PIP button\nby set it to ",(0,r.kt)("inlineCode",{parentName:"p"},"nil"),"."),(0,r.kt)("h3",{id:"player-behaviors"},"Player behaviors"),(0,r.kt)("p",null,"Player behavior defines a set of behaviors when video item changed. ",(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," supports 2\nbehaviors is ",(0,r.kt)("strong",{parentName:"p"},"autoplay")," and ",(0,r.kt)("strong",{parentName:"p"},"Player complete action"),". Default config is following the setting on CMS. If\nset, it'll override the setting on CMS. For more detail, please read the swift documents."),(0,r.kt)("h4",{id:"auto-play"},"Auto play"),(0,r.kt)("p",null,"The video autoPlay is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". You can override this behavior by explicitly setting it in the SDK."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"configuration.player.autoPlay = true\n")),(0,r.kt)("h4",{id:"player-complete-action"},"Player complete action"),(0,r.kt)("p",null,"You can control the behavior when the player finish a playback. Default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"PlayNextItem")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"configuration.player.playerCompleteAction = .playNextItem\n")),(0,r.kt)("p",null,"There are 4 options that you can set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Stop"),": The player will always stop the video after finishing playing it."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Loop"),": The player will always loop the current video."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PlayNextItem"),": The player will always play the next video in the list. If the current video is the last\nitem, the player will stop playing."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PlayNextItemAndLoop"),": The player will always play the next video in the list. If the current video is\nthe last item, the player will play the first item in the list.")),(0,r.kt)("h3",{id:"shortvideosource"},"ShortVideoSource"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," supports 2 types of video sources"),(0,r.kt)("h4",{id:"playlist"},"Playlist"),(0,r.kt)("p",null,"The playlist video source will fetch all the available videos from a specific playlist by an ID. To create a\nplaylist source, use the below API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ShortVideoSource.init(playlistId: String, maxItemsCount: Int? = nil)\n")),(0,r.kt)("p",null,"Setting a ",(0,r.kt)("inlineCode",{parentName:"p"},"maxVideoItemsCount")," greater than 0 will limit the number of videos to load, set ",(0,r.kt)("inlineCode",{parentName:"p"},"nil")," to show all\nvideo in playlist."),(0,r.kt)("h4",{id:"single"},"Single"),(0,r.kt)("p",null,"The single video source will fetch a single video by a video id. To create a single source, use the below API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ShortVideoSource.init(videoId: String)\n")),(0,r.kt)("h3",{id:"play--pause"},"Play & Pause"),(0,r.kt)("p",null,"User can pause and resume the video by calling the following APIs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"shortVideoView.pause()\n//\nshortVideoView.play()\n")),(0,r.kt)("h3",{id:"delegates"},"Delegates"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ShortVideoSDK")," provides several delegates to user to listen events when tapping on item, product CTA or\nerror occur."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"public protocol BLShortVideoErrorDelegate: AnyObject {\n    /// Callback when any error occur\n    /// - Parameters:\n    /// - view: ShortVideoView\n    /// - error: ShortVideoError error\n    func shortVideoView(view: ShortVideoView, onError error:\nShortVideoError)\n}\n\npublic protocol BLShortVideoItemDelegate: AnyObject {\n    /// Callback when short video item is clicked\n    /// - Parameters:\n    /// - view: ShortVideoView\n    /// - videoId: videoId\n    func shortVideoView(view: ShortVideoView, itemDidClick videoId:\nString)\n}\n\npublic protocol BLShortVideoShareItemDelegate: NSObject {\n    /// Callback when share button is clicked\n    /// - Parameters:\n    /// - videoId: videoId\n    /// - handle: if handle completion is `true`, nothing happen\notherwise it'll show default system share\n    func shortVideoItemDidShare(videoId: String, handle: @escaping (Bool)\n-> Void)\n}\n\npublic protocol BLShortVideoProductItemCTADelegate: AnyObject {\n    /// Callback when product item call to action button is clicked\n    /// - Parameter product: product object\n    func shortVideoViewProductItemCTADidClick(product:\nBLShortVideoProduct)\n}\n\npublic protocol BLShortVideoSubmitPollErrorDelegate: AnyObject {\n    /// Callback when any error occur\n    /// - Parameters:\n    /// - errorCode: Error code\n    func onSubmitPollError(errorCode: Int)\n}\n\npublic protocol BLShortVideoSubmitQnAErrorDelegate: AnyObject {\n    /// Callback when any error occur during submit default answer\n    /// - Parameters:\n    /// - errorCode: Error code\n    func onSubmitDefaultAnswerError(errorCode: Int)\n\n    /// Callback when any error occur during submit followup answer\n    /// - Parameters:\n    /// - errorCode: Error code\n    func onSubmitFollowupAnswerError(errorCode: Int)\n}\n")))}m.isMDXComponent=!0}}]);